<!DOCTYPE html>
<html lang="en">
<%- include('layouts/header');-%>
<script src='socket.io/socket.io.js'></script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>

<body style="background-color: #ffffff;">

    <%- include('layouts/navbar');-%>
    <!-----Home Section----->
    <section class="home" id="home"></section>
    <section class="home-content" id="home-content">
        <div class="max-size">
            <div class="content">
                <div class="text">NYUST</div>
                <div class="subtext">Power Detection</div>
            </div>
        </div>
    </section>

    <!-----Main Project----->
    <div class="main">
        <div class="Plot">
            <div class="plot-text">用電量圖表</div>
            <div class="selectform">
                <form name="select-form">
                    <div class="shelly_selection">
                        <div class="select-text">檢視電錶:</div>
                        <input type="checkbox" id="shelly1" class="shelly-button" autocomplete="off" 
                            name="shelly_check" checked=true>
                        <label id="shelly1_lb" for="shelly1" onclick="shelly_check(this,0)">ShellyEM</label>
                        <input type="checkbox" id="shelly2" class="shelly-button" autocomplete="off"
                            name="shelly_check">
                        <label id="shelly2_lb" for="shelly2" onclick="shelly_check(this,1)">Shelly25</label>
                        <input type="checkbox" id="shelly3" class="shelly-button" autocomplete="off"
                            name="shelly_check">
                        <label id="shelly3_lb" for="shelly3" onclick="shelly_check(this,2)">AC</label>
                    </div>
                    <div class="range_selection">
                        <div class="range-text">檢視範圍:</div>
                        <input type="checkbox" id="hour_arg" class="range-button" autocomplete="off"
                            name="range_check" checked=true>
                        <label id="hourbefore_lb" for="hour_arg" onclick="range_check(this,0)">一小時內設備使用功率</label>
                        <input type="checkbox" id="day_arg" class="range-button" autocomplete="off"
                            name="range_check">
                        <label id="daybefore_lb" for="day_arg" onclick="range_check(this,1)">24小時內設備使用功率</label>
                        <input type="checkbox" id="all_arg" class="range-button" autocomplete="off"
                            name="range_check">
                        <label id="allbefore_lb" for="all_arg" onclick="range_check(this,2)">過去設備使用功率</label>
                        <br> 
                        <input type="checkbox" id="hour_total" class="range-button" autocomplete="off"
                        name="range_check">
                        <label id="hourbefore_lb" for="hour_total" onclick="range_check(this,3)">一小時內累計損耗電能</label>
                        <input type="checkbox" id="day_total" class="range-button" autocomplete="off"
                            name="range_check">
                        <label id="daybefore_lb" for="day_total" onclick="range_check(this,4)">過去24小時累計損耗電能</label>
                        <input type="checkbox" id="all_total" class="range-button" autocomplete="off"
                            name="range_check">
                        <label id="allbefore_lb" for="all_total" onclick="range_check(this,5)">目前總計損耗電能</label>
                    </div>
                </form>
            </div>
            <div class="chart">
                <canvas id="chartPlot" class="myChart"></canvas>
            </div>
        </div>
        <div class="Side">
            <div class="Digital" id="value">
                <div class="digital_text"><%=now_send_first_ejs%></div>
                <div class="digital_content">
                    <div class="watt" id="EMwatt" style="display:flex">
                        <div class="watt_text"><%=now_send_second_ejs%></div>
                        <div class="watt_value"><%=now_send_third_ejs%></div>
                    </div>
                    <div class="voltage" id="EMvoltage">
                        <div class="voltage_text"><%=now_send_four_ejs%></div>
                        <div class="voltage_value"><%=now_send_five_ejs%></div>
                    </div>
                </div>
                <div class="lasttime">
                    <div class="lasttime_text">上次更新 :</div>
                    <div class="lasttime_value"><%=EM_now_date_ejs%><span class="cycle">(每20秒更新一次)</span></div>
                </div>
                <% var EM_tenmin_arg_watt_plot = JSON.parse(EM_tenmin_arg_watt_ejs);%>
                <div style="visibility: hidden;" id="EM_tenmin_arg_watt_id"><%=EM_tenmin_arg_watt_plot[EM_tenmin_arg_watt_plot.length-1]%></div>

                <% var EM_tenmin_total_watt_plot = JSON.parse(EM_tenmin_total_watt_ejs);%>
                <div style="visibility: hidden;" id="EM_tenmin_total_watt_id"><%=EM_tenmin_total_watt_plot[EM_tenmin_total_watt_plot.length-1]%></div>

                <% var EM_tenmin_date_plot = JSON.parse(EM_tenmin_date_ejs);%>
                <div style="visibility: hidden;" id="EM_tenmin_date_id"><%=EM_tenmin_date_plot[EM_tenmin_date_plot.length-1]%></div>

                <% var EM_thirtymin_arg_watt_plot = JSON.parse(EM_thirtymin_arg_watt_ejs);%>
                <div style="visibility: hidden;" id="EM_thirtymin_arg_watt_id"><%=EM_thirtymin_arg_watt_plot[EM_thirtymin_arg_watt_plot.length-1]%></div>

                <% var EM_thirtymin_total_watt_plot = JSON.parse(EM_thirtymin_total_watt_ejs);%>
                <div style="visibility: hidden;" id="EM_thirtymin_total_watt_id"><%=EM_thirtymin_total_watt_plot[EM_thirtymin_total_watt_plot.length-1]%></div>

                <% var EM_thirtymin_date_plot = JSON.parse(EM_thirtymin_date_ejs);%>
                <div style="visibility: hidden;" id="EM_thirtymin_date_id"><%=EM_thirtymin_date_plot[EM_thirtymin_date_plot.length-1]%></div>

                <% var EM_hour_arg_watt_plot = JSON.parse(EM_hour_arg_watt_ejs);%>
                <div style="visibility: hidden;" id="EM_hour_arg_watt_id"><%=EM_hour_arg_watt_plot[EM_hour_arg_watt_plot.length-1]%></div>

                <% var EM_hour_total_watt_plot = JSON.parse(EM_hour_total_watt_ejs);%>
                <div style="visibility: hidden;" id="EM_hour_total_watt_id"><%=EM_hour_total_watt_plot[EM_hour_total_watt_plot.length-1]%></div>

                <% var EM_hour_date_plot = JSON.parse(EM_hour_date_ejs);%>
                <div style="visibility: hidden;" id="EM_hour_date_id"><%=EM_hour_date_plot[EM_hour_date_plot.length-1]%></div>

                <% var TF_tenmin_arg_watt_plot = JSON.parse(TF_tenmin_arg_watt_ejs);%>
                <div style="visibility: hidden;" id="TF_tenmin_arg_watt_id"><%=TF_tenmin_arg_watt_plot[TF_tenmin_arg_watt_plot.length-1]%></div>

                <% var TF_tenmin_total_watt_plot = JSON.parse(TF_tenmin_total_watt_ejs);%>
                <div style="visibility: hidden;" id="TF_tenmin_total_watt_id"><%=TF_tenmin_total_watt_plot[TF_tenmin_total_watt_plot.length-1]%></div>

                <% var TF_thirtymin_arg_watt_plot = JSON.parse(TF_thirtymin_arg_watt_ejs);%>
                <div style="visibility: hidden;" id="TF_thirtymin_arg_watt_id"><%=TF_thirtymin_arg_watt_plot[TF_thirtymin_arg_watt_plot.length-1]%></div>

                <% var TF_thirtymin_total_watt_plot = JSON.parse(TF_thirtymin_total_watt_ejs);%>
                <div style="visibility: hidden;" id="TF_thirtymin_total_watt_id"><%=TF_thirtymin_total_watt_plot[TF_thirtymin_total_watt_plot.length-1]%></div>

                <% var TF_hour_arg_watt_plot = JSON.parse(TF_hour_arg_watt_ejs);%>
                <div style="visibility: hidden;" id="TF_hour_arg_watt_id"><%=TF_hour_arg_watt_plot[TF_hour_arg_watt_plot.length-1]%></div>

                <% var TF_hour_total_watt_plot = JSON.parse(TF_hour_total_watt_ejs);%>
                <div style="visibility: hidden;" id="TF_hour_total_watt_id"><%=TF_hour_total_watt_plot[TF_hour_total_watt_plot.length-1]%></div>

            </div>
            <div class="Control">
                <div class="control_text">電源控制</div>
                <div class="control_content">
                    <div class="switch_content1">
                        <div class="switch_text">冷氣</div>
                        <div class="switch">
                            <input type="checkbox" id="airconditioner" class="switch_button" autocomplete="off"
                                name="myswitch">
                            <label class="switch_lb" id="airconditioner_lb" for="airconditioner"
                                onclick="btncontrol(this,'airconditioner')">OFF</label>
                        </div>
                    </div>
                    <div class="switch_content2">
                        <div class="switch_text">電燈0</div>
                        <div class="switch">
                            <input type="checkbox" id="light0" class="switch_button" autocomplete="off" name="myswitch">
                            <label class="switch_lb" id="light0_lb" for="light0"
                                onclick="btncontrol(this,'light0')">OFF</label>
                        </div>
                    </div>
                    <div class="switch_content3">
                        <div class="switch_text">電燈1</div>
                        <div class="switch">
                            <input type="checkbox" id="light1" class="switch_button" autocomplete="off" name="myswitch">
                            <label class="switch_lb" id="light1_lb" for="light1"
                                onclick="btncontrol(this,'light1')">OFF</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
<%-include('layouts/scripts');-%>
<script>
    const light = document.getElementById('light');
    setInterval(() => {
        $("#value").load("https://murmuring-temple-18681.herokuapp.com/" + " #value");
        //$("#value").load("http://localhost:4000/" + " #value");
    }, 10000);
    var socket = io.connect();
    // ----- Test Datas -----
    var EM_tenmin_arg_watt_array = [],
        EM_tenmin_total_watt_array = [],
        EM_thirtymin_arg_watt_array = [],
        EM_thirtymin_total_watt_array = [],
        EM_hour_arg_watt_array = [],
        EM_hour_total_watt_array = [];

    var TF_tenmin_arg_watt_array = [],
        TF_tenmin_total_watt_array = [],
        TF_thirtymin_arg_watt_array = [],
        TF_thirtymin_total_watt_array = [],
        TF_hour_arg_watt_array = [],
        TF_hour_total_watt_array = [];

    var EM_tenmin_date_array = [],
        EM_thirtymin_date_array = [],
        EM_hour_date_ejs = [];

    var EMTF_tenmin_arg_data = [],
        EMTF_tenmin_total_data = [];
    var EMTF_thirtymin_arg_data = [],
        EMTF_thirtymin_total_data = [];
    var EMTF_hour_arg_data = [],
        EMTF_hour_total_data = [];

    EM_tenmin_arg_watt_array = "<%-EM_tenmin_arg_watt_plot%>".split(",");
    EM_tenmin_total_watt_array = "<%-EM_tenmin_total_watt_plot%>".split(",");
    EM_thirtymin_arg_watt_array = "<%-EM_thirtymin_arg_watt_plot%>".split(",");
    EM_thirtymin_total_watt_array = "<%-EM_thirtymin_total_watt_plot%>".split(",");
    EM_hour_arg_watt_array = "<%-EM_hour_arg_watt_plot%>".split(",");
    EM_hour_total_watt_array = "<%-EM_hour_total_watt_plot%>".split(",");
    TF_tenmin_arg_watt_array = "<%-TF_tenmin_arg_watt_plot%>".split(",");
    TF_tenmin_total_watt_array = "<%-TF_tenmin_total_watt_plot%>".split(",");
    TF_thirtymin_arg_watt_array = "<%-TF_thirtymin_arg_watt_plot%>".split(",");
    TF_thirtymin_total_watt_array = "<%-TF_thirtymin_total_watt_plot%>".split(",");
    TF_hour_arg_watt_array = "<%-TF_hour_arg_watt_plot%>".split(",");
    TF_hour_total_watt_array = "<%-TF_hour_total_watt_plot%>".split(",");

    EMTF_tenmin_arg_data = [EM_tenmin_arg_watt_array, TF_tenmin_arg_watt_array];
    EMTF_tenmin_total_data = [EM_tenmin_total_watt_array, TF_tenmin_total_watt_array];
    EMTF_thirtymin_arg_data = [EM_thirtymin_arg_watt_array, TF_thirtymin_arg_watt_array]
    EMTF_thirtymin_total_data = [EM_thirtymin_total_watt_array, TF_thirtymin_total_watt_array];
    EMTF_hour_arg_data = [EM_hour_arg_watt_array, TF_hour_arg_watt_array];
    EMTF_hour_total_data = [EM_hour_total_watt_array, TF_hour_total_watt_array];
    const EMTF_tenmin_date_axis = '<%-EM_tenmin_date_plot%>'.split(",");
    console.log(EMTF_tenmin_date_axis)
    const EMTF_thirtymin_date_axis = '<%-EM_thirtymin_date_plot%>'.split(",");
    const EMTF_hour_date_axis = '<%-EM_hour_date_plot%>'.split(",");
    setInterval(() => {
        if (EMTF_tenmin_date_axis[EMTF_tenmin_date_axis.length - 1] != document.getElementById('EM_tenmin_date_id').innerHTML) {
            EM_tenmin_arg_watt_array.push(document.getElementById('EM_tenmin_arg_watt_id').innerHTML);
            TF_tenmin_arg_watt_array.push(document.getElementById('TF_tenmin_arg_watt_id').innerHTML);
            EM_tenmin_total_watt_array.push(document.getElementById('EM_tenmin_total_watt_id').innerHTML);
            TF_tenmin_total_watt_array.push(document.getElementById('TF_tenmin_total_watt_id').innerHTML);

            EM_tenmin_arg_watt_array.shift();
            TF_tenmin_arg_watt_array.shift();
            EM_tenmin_total_watt_array.shift();
            TF_tenmin_total_watt_array.shift();
            EMTF_tenmin_date_axis.push(document.getElementById('EM_tenmin_date_id').innerHTML);
            EMTF_tenmin_date_axis.shift();
            EMTF_tenmin_arg_data = [EM_tenmin_arg_watt_array, TF_tenmin_arg_watt_array];
            EMTF_tenmin_total_data = [EM_tenmin_total_watt_array, TF_tenmin_total_watt_array];
            myChart.update();
        } else if (EMTF_hour_date_axis[EMTF_hour_date_axis.length - 1] != document.getElementById('EM_hour_date_id').innerHTML) {
            EM_hour_arg_watt_array.push(document.getElementById('EM_hour_arg_watt_id').innerHTML);
            TF_hour_arg_watt_array.push(document.getElementById('TF_hour_arg_watt_id').innerHTML);
            EM_hour_total_watt_array.push(document.getElementById('EM_hour_total_watt_id').innerHTML);
            TF_hour_total_watt_array.push(document.getElementById('TF_hour_total_watt_id').innerHTML);

            EM_hour_total_watt_array.shift();
            TF_hour_total_watt_array.shift();
            EM_hour_arg_watt_array.shift();
            TF_hour_arg_watt_array.shift();
            EMTF_hour_date_axis.push(document.getElementById('EM_hour_date_id').innerHTML);
            EMTF_hour_date_axis.shift();
            EMTF_hour_arg_data = [EM_hour_arg_watt_array, TF_hour_arg_watt_array];
            EMTF_hour_total_data = [EM_hour_total_watt_array, TF_hour_total_watt_array];
            myChart.update();
        } else if (EMTF_thirtymin_date_axis[EMTF_thirtymin_date_axis.length - 1] != document.getElementById('EM_thirtymin_date_id').innerHTML) {
            EM_thirtymin_arg_watt_array.push(document.getElementById('EM_thirtymin_arg_watt_id').innerHTML);
            TF_thirtymin_arg_watt_array.push(document.getElementById('TF_thirtymin_arg_watt_id').innerHTML);
            EM_thirtymin_total_watt_array.push(document.getElementById('EM_thirtymin_total_watt_id').innerHTML);
            TF_thirtymin_total_watt_array.push(document.getElementById('TF_thirtymin_total_watt_id').innerHTML);

            EM_thirtymin_arg_watt_array.shift();
            EM_thirtymin_total_watt_array.shift();
            TF_thirtymin_arg_watt_array.shift();
            TF_thirtymin_total_watt_array.shift();
            EMTF_thirtymin_date_axis.push(document.getElementById('EM_thirtymin_date_id').innerHTML);
            EMTF_thirtymin_date_axis.shift();
            EMTF_thirtymin_arg_data = [EM_thirtymin_arg_watt_array, TF_thirtymin_arg_watt_array];
            EMTF_thirtymin_total_data = [EM_thirtymin_total_watt_array, TF_thirtymin_total_watt_array];
            myChart.update();
        }
    }, 1000);
    var ShellyEM_Datas = {
        tenmin_arg_data: EMTF_tenmin_arg_data[0],
        hour_arg_data: EMTF_hour_arg_data[0],
        thirty_arg_data: EMTF_thirtymin_arg_data[0],
        tenmin_total_data: EMTF_tenmin_total_data[0],
        hour_total_data: EMTF_hour_total_data[0],
        thirty_total_data: EMTF_thirtymin_total_data[0]
    };
    var Shelly25_Datas = {
        tenmin_arg_data: EMTF_tenmin_arg_data[1],
        hour_arg_data: EMTF_hour_arg_data[1],
        thirty_arg_data: EMTF_thirtymin_arg_data[1],
        tenmin_total_data: EMTF_tenmin_total_data[1],
        hour_total_data: EMTF_hour_total_data[1],
        thirty_total_data: EMTF_thirtymin_total_data[1]
    };
    var AC_Datas = {
        tenmin_arg_data: EMTF_tenmin_arg_data[3],
        hour_arg_data: EMTF_hour_arg_data[3],
        thirty_arg_data: EMTF_thirtymin_arg_data[3],
        tenmin_total_data: EMTF_tenmin_total_data[3],
        hour_total_data: EMTF_hour_total_data[3],
        thirty_total_data: EMTF_thirtymin_total_data[3]
    };
    window.shellyNum = 0;
    window.rangeNum = 0;
    window.chartLabels = EMTF_tenmin_date_axis; // 預設檢視範圍 : 過去一小時
    window.Datas = ShellyEM_Datas.tenmin_arg_data;

    var chartlabel = '當前功率w';
    // 初始化 Chart
    var ctx = document.getElementById("chartPlot");
    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: window.chartLabels,
            datasets: [{
                label: chartlabel,
                data: window.Datas,
                backgroundColor: 'rgba(111, 163, 204, 0.5)',
                borderColor: '#6FA3CC',
                scales: {
                    yAxes: [{
                        display: true,
                        ticks: {
                            suggestedMin: 0,
                            suggestedMax: 100000,
                            beginAtZero: true
                        }
                    }]
                }
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false
        }
    });

    // Change power watch ( shelly ) 
    function shelly_check(checkbox, num) {
        // single selection
        var checkbox1 = document.getElementsByName('shelly_check');
        checkbox1.forEach((item) => {
            if (item != checkbox) item.checked = false;
        })
        socket.emit('btnSW', num);
        $("#value").load("https://murmuring-temple-18681.herokuapp.com/" + " #value");
        //$("#value").load("http://localhost:4000/" + " #value");
        if (num == 0) {
            window.shellyNum = 0;
        } else if (num == 1) {
            window.shellyNum = 1;
        } else {
            window.shellyNum = 2;
        }
        setChart(window.shellyNum, window.rangeNum);
        myChart.update();
    }

    // Change range
    function range_check(checkbox, num) {
        // single selection
        var checkbox2 = document.getElementsByName('range_check')
        checkbox2.forEach((item) => {
            if (item != checkbox) item.checked = false;
        })
        window.rangeNum = num;
        if (num == 0) {
            window.chartLabels = EMTF_tenmin_date_axis;
            chartlabel = "當前功率w";
        } else if (num == 1) {
            window.chartLabels = EMTF_hour_date_axis;
            chartlabel = "當前功率w";
        } else if (num == 2) {
            window.chartLabels = EMTF_thirtymin_date_axis;
            chartlabel = "當前功率w";
        } else if (num == 3) {
            window.chartLabels = EMTF_tenmin_date_axis;
            chartlabel = "累計損耗功率kwh"
        } else if (num == 4) {
            window.chartLabels = EMTF_hour_date_axis;
            chartlabel = "累計損耗功率kwh"
        } else if (num == 5) {
            window.chartLabels = EMTF_thirtymin_date_axis;
            chartlabel = "累計損耗功率kwh"
        }
        myChart.data.labels = window.chartLabels;
        myChart.data.datasets[0].label = chartlabel;
        setChart(window.shellyNum, window.rangeNum);

        myChart.update();
    }
    // set chart
    function setChart(shelly, range) {
        if (shelly == 0) {
            if (range == 0) window.Datas = ShellyEM_Datas.tenmin_arg_data;
            else if (range == 1) window.Datas = ShellyEM_Datas.hour_arg_data;
            else if (range == 2) window.Datas = ShellyEM_Datas.thirty_arg_data;
            else if (range == 3) window.Datas = ShellyEM_Datas.tenmin_total_data;
            else if (range == 4) window.Datas = ShellyEM_Datas.hour_total_data;
            else if (range == 5) window.Datas = ShellyEM_Datas.thirty_total_data;
        } else if (shelly == 1) {
            if (range == 0) window.Datas = Shelly25_Datas.tenmin_arg_data;
            else if (range == 1) window.Datas = Shelly25_Datas.hour_arg_data;
            else if (range == 2) window.Datas = Shelly25_Datas.thirty_arg_data;
            else if (range == 3) window.Datas = Shelly25_Datas.tenmin_total_data;
            else if (range == 4) window.Datas = Shelly25_Datas.hour_total_data;
            else if (range == 5) window.Datas = Shelly25_Datas.thirty_total_data;
        } else if (shelly == 2) {
            if (range == 0) window.Datas = AC_Datas.tenmin_arg_data;
            else if (range == 1) window.Datas = AC_Datas.hour_arg_data;
            else if (range == 2) window.Datas = AC_Datas.thirty_arg_data;
            else if (range == 3) window.Datas = AC_Datas.tenmin_total_data;
            else if (range == 4) window.Datas = AC_Datas.hour_total_data;
            else if (range == 5) window.Datas = AC_Datas.thirty_total_data;
        }
        myChart.data.datasets[0].data = window.Datas;
    }

    // Power Control BTN
    function btncontrol(obj, btnid) {
        var checked = document.getElementById(btnid).checked;
        if (!checked) {
            document.getElementById(obj.id).innerText = "ON";
            if (btnid == "light0") {
                socket.emit('TF0on');
            } else if (btnid == "light1") {
                socket.emit('TF1on');
            } else if (btnid == "airconditioner") {
                socket.emit('ACon');
            }
        } else {
            document.getElementById(obj.id).innerText = "OFF";
            if (btnid == "light0") {
                socket.emit('TF0off');
            } else if (btnid == "light1") {
                socket.emit('TF1off');
            } else if (btnid == "airconditioner") {
                socket.emit('ACoff');
            }
        }
    }

    // Nav Bar Scrolling response
    $(window).scroll(function () {
        if (this.scrollY > 20) $('.Title').addClass("show");
        else $('.Title').removeClass("show");
    })
</script>

</html>